import { createClient } from '@supabase/supabase-js'

const supabase = createClient(
  import.meta.env.VITE_SUPABASE_URL as string,
  import.meta.env.VITE_SUPABASE_KEY as string
)

interface UserData {
  email: string
  username: string
  nickname: string
  password: string
}

interface UserloginData {
  email: string
  password: string
}

// ÏÇ¨Ïö©Ïûê Îì±Î°ù Î∞è Ï∂îÍ∞Ä Ï†ïÎ≥¥ Ï†ÄÏû•
export const enterUserData = async (
  userData: UserData
): Promise<string | undefined> => {
  try {
    const { data, error } = await supabase.auth.signUp({
      email: userData.email,
      password: userData.password
    })

    if (data) return data?.user?.id
    else console.log('ÌöåÏõêÍ∞ÄÏûÖ Ïã§Ìå®:', error)
  } catch (error) {
    console.error(error)
  }
}

// ÏÇ¨Ïö©ÏûêÏùò Ï†ïÎ≥¥Î•º Îç∞Ïù¥ÌÑ∞ÌÖåÏù¥Î∏îÏóê Ï†ÄÏû•
export const insertUserData = async (userData: UserData, uuid: string) => {
  try {
    const { data, error } = await supabase
      .from('users')
      .insert([
        {
          user_email: uuid,
          username: userData.username,
          nickname: userData.nickname
        }
      ])
      .select()

    if (data) console.log(data)
    else console.log(error)
  } catch (error) {
    console.error(`‚ùå Îç∞Ïù¥ÌÑ∞ ÏÇΩÏûÖ Ïã§Ìå®: ${error}`)
  }
}

// ÍπÉÌóàÎ∏å ÏÇ¨Ïö©Ïûê Îì±Î°ù Î∞è Î°úÍ∑∏Ïù∏
export const gitHubLogin = async () => {
  try {
    const { data, error } = await supabase.auth.signInWithOAuth({
      provider: 'github'
    })
    if (error) {
      console.error('GitHub Î°úÍ∑∏Ïù∏ Ïã§Ìå®:', error.message)
    } else {
      localStorage.setItem('userData', JSON.stringify(data))
      console.log('GitHub Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ:', data)
    }
  } catch (error) {
    console.error(`ü•∫ Error: ${error}`)
  }
}

// ÏÇ¨Ïö©Ïûê Î°úÍ∑∏Ïù∏
export const userLogin = async (userloginData: UserloginData) => {
  try {
    const { data, error } = await supabase.auth.signInWithPassword({
      email: userloginData.email,
      password: userloginData.password
    })

    if (data) {
      // ÏÇ¨Ïö©ÏûêÏùò Ï†ïÎ≥¥Î•º Î°úÏª¨Ïä§ÌÜ†Î¶¨ÏßÄÏóê Ï†ÄÏû•Ìï©ÎãàÎã§.
      localStorage.setItem('userData', JSON.stringify(data))
      console.log('Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ:', data)
      return data
    } else if (error) {
      console.error('Î°úÍ∑∏Ïù∏ Ïã§Ìå®:', error.message)
    }
  } catch (error) {
    console.error('‚ùå Error:', error)
  }
}

// ÌòÑÏû¨ Î°úÍ∑∏Ïù∏Ìïú ÏÇ¨Ïö©ÏûêÏùò Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞
export const getMetaData = async () => {
  const { data, error } = await supabase.auth.getUser('hori04@gmail.com')

  if (data) {
    // ÏÇ¨Ïö©Ïûê Î©îÌÉÄÎç∞Ïù¥ÌÑ∞ ÌôïÏù∏
    const metadata = data.user?.user_metadata

    if (metadata) {
      const { username, nickname } = metadata
      console.log(`Username: ${username}, Nickname: ${nickname}`)
    } else {
      console.log('ÏÇ¨Ïö©Ïûê Î©îÌÉÄÎç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏäµÎãàÎã§.')
    }
  } else if (error) {
    console.error(
      'ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî ÎèÑÏ§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.',
      error.message
    )
  }
}

// SUPABASE StorageÏóêÏÑú ÏÇ¨Ïö©ÏûêÏùò Ïù¥ÎØ∏ÏßÄÎ•º Í∞ÄÏ†∏Ïò§Îäî Ìï®Ïàò
// export const getImageUrl = async (imageName: string) => {
//   try {
//     const { publicURL, error } = await supabase.storage
//       .from('YOUR_STORAGE_BUCKET')
//       .getPublicUrl(imageName)

//     if (publicURL) {
//       console.log('Image URL:', publicURL)
//       return publicURL
//     } else {
//       console.error('Error getting image URL:', error.message)
//     }
//   } catch (error) {
//     console.error('‚ùå Error:', error)
//   }
// }
